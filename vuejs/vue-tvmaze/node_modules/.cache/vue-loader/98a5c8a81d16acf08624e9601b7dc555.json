{"remainingRequest":"/Users/graffixnyc/Stevens/Stevens_Codebase_NEW/CS-554/vuejs/vue-tvmaze/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/graffixnyc/Stevens/Stevens_Codebase_NEW/CS-554/vuejs/vue-tvmaze/src/components/Show.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/graffixnyc/Stevens/Stevens_Codebase_NEW/CS-554/vuejs/vue-tvmaze/src/components/Show.vue","mtime":1588194889459},{"path":"/Users/graffixnyc/Stevens/Stevens_Codebase_NEW/CS-554/vuejs/vue-tvmaze/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/graffixnyc/Stevens/Stevens_Codebase_NEW/CS-554/vuejs/vue-tvmaze/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/graffixnyc/Stevens/Stevens_Codebase_NEW/CS-554/vuejs/vue-tvmaze/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/graffixnyc/Stevens/Stevens_Codebase_NEW/CS-554/vuejs/vue-tvmaze/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNob3ciLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpZDogdGhpcy4kcm91dGUucGFyYW1zLmlkLAogICAgICBzaG93OiB7IG5hbWU6IG51bGwsIGltYWdlOiB7IG1lZGl1bTogbnVsbCB9LCBzdW1tYXJ5OiBudWxsIH0sCiAgICAgIG5hbWU6IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRTaG93KGlkKSB7CiAgICAgIGF4aW9zCiAgICAgICAgLmdldCgiaHR0cDovL2FwaS50dm1hemUuY29tL3Nob3dzLyIgKyBpZCkKICAgICAgICAudGhlbigoeyBkYXRhIH0pID0+ICh0aGlzLnNob3cgPSBkYXRhKSk7CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRTaG93KHRoaXMuJHJvdXRlLnBhcmFtcy5pZCk7CiAgfSwKICB3YXRjaDogewogICAgJHJvdXRlKCkgewogICAgICB0aGlzLmdldFNob3codGhpcy4kcm91dGUucGFyYW1zLmlkKTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["Show.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Show.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1>{{this.show.name}}</h1>\n    <br />\n    <img v-if=\"this.show.image.medium\" :src=\"this.show.image.medium\" />\n    <br />\n    <span v-html=\"this.show.summary\"></span>\n    <br />\n    <h4>Genres:</h4>\n    <ul>\n      <li v-for=\"genre in this.show.genres\" :key=\"genre\">{{genre}}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Show\",\n  data() {\n    return {\n      id: this.$route.params.id,\n      show: { name: null, image: { medium: null }, summary: null },\n      name: null\n    };\n  },\n  methods: {\n    getShow(id) {\n      axios\n        .get(\"http://api.tvmaze.com/shows/\" + id)\n        .then(({ data }) => (this.show = data));\n    }\n  },\n  created() {\n    this.getShow(this.$route.params.id);\n  },\n  watch: {\n    $route() {\n      this.getShow(this.$route.params.id);\n    }\n  }\n};\n</script>\n\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\na {\n  color: #42b983;\n}\nspan {\n  text-align: center;\n  max-width: 50%;\n}\ndiv {\n  max-width: 50%;\n  margin: 0 auto;\n}\n</style>"]}]}